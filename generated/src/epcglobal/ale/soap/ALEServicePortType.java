
package epcglobal.ale.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.ParameterStyle;
import epcglobal.ale.ECReports;
import epcglobal.ale.ECSpec;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.0_01-b59-fcs
 * Generated source version: 2.0
 * 
 */
@WebService(name = "ALEServicePortType", targetNamespace = "urn:epcglobal:ale:wsdl:1")
@SOAPBinding(parameterStyle = ParameterStyle.BARE)
public interface ALEServicePortType {


    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.soap.VoidHolder
     * @throws ECSpecValidationExceptionResponse
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     * @throws DuplicateNameExceptionResponse
     */
    @WebMethod
    @WebResult(name = "VoidHolder", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "defineReturn")
    public VoidHolder define(
        @WebParam(name = "Define", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        Define parms)
        throws DuplicateNameExceptionResponse, ECSpecValidationExceptionResponse, ImplementationExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.soap.VoidHolder
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     * @throws NoSuchNameExceptionResponse
     */
    @WebMethod
    @WebResult(name = "VoidHolder", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "undefineReturn")
    public VoidHolder undefine(
        @WebParam(name = "Undefine", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        Undefine parms)
        throws ImplementationExceptionResponse, NoSuchNameExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.ECSpec
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetECSpecResult", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "getECSpecReturn")
    public ECSpec getECSpec(
        @WebParam(name = "GetECSpec", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        GetECSpec parms)
        throws ImplementationExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.soap.ArrayOfString
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetECSpecNamesResult", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "getECSpecNamesReturn")
    public ArrayOfString getECSpecNames(
        @WebParam(name = "GetECSpecNames", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        EmptyParms parms)
        throws ImplementationExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.soap.VoidHolder
     * @throws InvalidURIExceptionResponse
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     * @throws NoSuchNameExceptionResponse
     * @throws DuplicateSubscriptionExceptionResponse
     */
    @WebMethod
    @WebResult(name = "VoidHolder", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "subscribeReturn")
    public VoidHolder subscribe(
        @WebParam(name = "Subscribe", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        Subscribe parms)
        throws DuplicateSubscriptionExceptionResponse, ImplementationExceptionResponse, InvalidURIExceptionResponse, NoSuchNameExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.soap.VoidHolder
     * @throws InvalidURIExceptionResponse
     * @throws NoSuchSubscriberExceptionResponse
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     * @throws NoSuchNameExceptionResponse
     */
    @WebMethod
    @WebResult(name = "VoidHolder", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "unsubscribeReturn")
    public VoidHolder unsubscribe(
        @WebParam(name = "Unsubscribe", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        Unsubscribe parms)
        throws ImplementationExceptionResponse, InvalidURIExceptionResponse, NoSuchNameExceptionResponse, NoSuchSubscriberExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.ECReports
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     * @throws NoSuchNameExceptionResponse
     */
    @WebMethod
    @WebResult(name = "PollResult", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "pollReturn")
    public ECReports poll(
        @WebParam(name = "Poll", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        Poll parms)
        throws ImplementationExceptionResponse, NoSuchNameExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.ECReports
     * @throws ECSpecValidationExceptionResponse
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "ImmediateResult", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "immediateReturn")
    public ECReports immediate(
        @WebParam(name = "Immediate", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        Immediate parms)
        throws ECSpecValidationExceptionResponse, ImplementationExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns epcglobal.ale.soap.ArrayOfString
     * @throws SecurityExceptionResponse
     * @throws ImplementationExceptionResponse
     * @throws NoSuchNameExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetSubscribersResult", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "getSubscribersReturn")
    public ArrayOfString getSubscribers(
        @WebParam(name = "GetSubscribers", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        GetSubscribers parms)
        throws ImplementationExceptionResponse, NoSuchNameExceptionResponse, SecurityExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns java.lang.String
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetStandardVersionResult", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "getStandardVersionReturn")
    public String getStandardVersion(
        @WebParam(name = "GetStandardVersion", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        EmptyParms parms)
        throws ImplementationExceptionResponse
    ;

    /**
     * 
     * @param parms
     * @return
     *     returns java.lang.String
     * @throws ImplementationExceptionResponse
     */
    @WebMethod
    @WebResult(name = "GetVendorVersionResult", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "getVendorVersionReturn")
    public String getVendorVersion(
        @WebParam(name = "GetVendorVersion", targetNamespace = "urn:epcglobal:ale:wsdl:1", partName = "parms")
        EmptyParms parms)
        throws ImplementationExceptionResponse
    ;

}
