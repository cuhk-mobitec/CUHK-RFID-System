/*
 * Generated by XDoclet - Do not edit!
 */
package cuhk.ale.ejb;

/**
 * Session layer for ReaderManager.
 * @xdoclet-generated at ${TODAY}
 * @copyright The XDoclet Team
 * @author XDoclet
 * @version ${version}
 */
public class ReaderManagerSession
   extends cuhk.ale.ejb.ReaderManagerBean
   implements javax.ejb.SessionBean
{
   public void ejbActivate() 
   {

   }

   public void ejbPassivate() 
   {
   }

   public void setSessionContext(javax.ejb.SessionContext ctx) 
   {
   }

   public void unsetSessionContext() 
   {
   }

   public void ejbRemove() 
   {
   }

   public void ejbCreate() throws javax.ejb.CreateException
   {
   }

      private static cuhk.ale.dao.ReaderManagerDAO dao = null;

   protected static synchronized cuhk.ale.dao.ReaderManagerDAO getDao()
   {
      if (dao != null) {
         return dao;
      } else {

         dao = (cuhk.ale.dao.ReaderManagerDAO) new cuhk.ale.dao.ReaderManagerDAOImpl();

         dao.init();
         return dao;
      }
   }

    public void submitTags(java.lang.String readerID,java.util.List tags)
            throws java.lang.Exception
    {

        getDao().submitTags(readerID,tags);

    }

    public boolean isPhysicalReaderExists(java.lang.String readerID)
            throws java.lang.Exception
    {

        return getDao().isPhysicalReaderExists(readerID);

    }

    public void insertPhysicalReaderInfo(java.lang.String readerID,cuhk.ale.PhysicalReaderInfo physicalReaderInfo)
            throws java.lang.Exception
    {

        getDao().insertPhysicalReaderInfo(readerID,physicalReaderInfo);

    }

    public void updatePhysicalReaderInfo(java.lang.String readerID,cuhk.ale.PhysicalReaderInfo physicalReaderInfo)
            throws java.lang.Exception
    {

        getDao().updatePhysicalReaderInfo(readerID,physicalReaderInfo);

    }

    public java.util.List retrieveLogicalReaderNames()
            throws java.lang.Exception
    {

        return getDao().retrieveLogicalReaderNames();

    }

    public java.util.List retrieveReaderNamesFromTag(java.lang.String tag)
            throws java.lang.Exception
    {

        return getDao().retrieveReaderNamesFromTag(tag);

    }

}
